<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!--Parent configuration -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>org.ICIQ</groupId>
	<artifactId>eChempad</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>eChempad</name>
	<description>Experimental Chemistry Electronic Pad</description>
	<inceptionYear>2021</inceptionYear>
	<organization>
		<name>ICIQ</name>
		<url>https://www.iciq.org/</url>
	</organization>
	<!-- Internal variable definition for compilation -->
	<properties>
		<!-- General compilation of the project -->
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<spring.version>2.6.5</spring.version>
		<!--Used by the licenses plugin-->
		<license.licenseName>apache_v2</license.licenseName>
		<current.year>2022</current.year>
	</properties>



	<!--Licenses -->
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>





    <!--Dependencies -->
	<dependencies>
		<!-- Java persistence API, uses
		https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Added with the project initialization, it seems a core part of spring boot to do automatic tests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Added with the project initialization -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Added with the project initialization, it is for using web page tools in the project -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- https://www.baeldung.com/javax-validation
        Ensures that annotation in beans such as @NotNull meet a specific criteria -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<!-- To import the @ Entity annotation and allow persistence of the memory DB in a relational DB -->
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
			<artifactId>hibernate-jpa-2.1-api</artifactId>
			<version>1.0.2.Final</version>
		</dependency>

		<!-- To use postgresql dialect in spring -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- To import hibernate, which is used to achieve transparent persistence to a Database -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.6.5.Final</version>
		</dependency>

		<!-- Allows the usage of filters that will filter out the requests that our controllers are receiving -->
		<!-- By default, filters everything out, so we need to configure it -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>2.6.3</version>
		</dependency>

		<!-- Used by the jetbrains IDE to annotate its own things, so they can be recognized by the IDE -->
		<dependency>
			<groupId>org.jetbrains</groupId>
			<artifactId>annotations</artifactId>
			<version>22.0.0</version>
			<scope>compile</scope>
		</dependency>

		<!-- Allows the creation of our own properties in application.properties file -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Allows the use of the WebClient class, used to perform REST operations as a client. Used to communicate with Signals API-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>

		<!-- Used to control the ACL security infrastructure -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
		</dependency>

		<!-- Used to control the ACL security infrastructure -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
		</dependency>

		<!-- Used to control the ACL security infrastructure, probably for some annotations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>

		<!-- Spring ACL requires a cache to store Object Identity and ACL entries, so we'll make use of Ehcache here.
		And, to support Ehcache in Spring, we also need the spring-context-support -->
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.6.11</version>
		</dependency>


		<!-- DEPENDENCIES WITH DEBATABLE UTILITY -->

		<!--Not used yet?, it serves testing purposes -->
		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
		</dependency>

		<!--Not used yet?, it serves testing purposes -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
        </dependency>


    </dependencies>



	<!--Builds and plug ins-->

	<build>
		<plugins>

		</plugins>
	</build>


	<!--Profiles -->

	<profiles>


	</profiles>
</project>
