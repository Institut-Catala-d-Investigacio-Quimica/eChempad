#
# |===================================================================================|
# | Copyright (C) 2021 - 2022 ICIQ <contact@iochem-bd.org>                            |
# |                                                                                   |
# | This software is the property of ICIQ.                                            |
# |===================================================================================|
#

#####################################
### APPLICATION PROFILE SELECTION ###
#####################################

# Profile that is active.
# ** Maven wrapper reads this following line. Do not remove or change format. Change only the value **
# Can be test, prod and dev
spring.profiles.active = dev

# Fallback profile (set if a certain profile is not active)
spring.profiles.default = prod


#########################################
### Setting up connection to psql DB ####
#########################################

# Selects the SQL dialect used to generate appropriate statements for postgreSQL
eChempad.db.dialect = org.hibernate.dialect.PostgreSQLDialect

# Add DB type (psql)
eChempad.db.driver = org.postgresql.Driver

# Set connection to the desired table of DB using URL
eChempad.db.url = jdbc:postgresql://127.0.0.1:5432/eChempad

# Database credentials
eChempad.db.username = amarine
eChempad.db.password = chemistry

# Output the SQL queries
eChempad.db.show-sql = true

# Format of the SQL queries written in the output
eChempad.db.format_sql = yes

# Naming schema used when naming tables and properties, it can be SpringImplicitNamingStrategy or SpringPhysicalNamingStrategy
eChempad.db.naming_strategy = SpringPhysicalNamingStrategy

# https://stackoverflow.com/questions/31469136/spring-data-jpa-storing-blob
# This property configures the current session context, which is needed if you want to use the LobCreator, which is
# invoked as  this.sessionFactory.getCurrentSession().getLobHelper()
# Valid options:
# - jta
# - thread
# - managed
# - thread_static
# current_session_context_class=thread
eChempad.db.sessionContext = thread

# To remove a warning about open session in view, which is considered an anti-pattern. It can cause performance problems
# when active in some projects, but when is inactive we need to handle the LazyInitializationException by ourselves.
# https://stackoverflow.com/questions/30549489/what-is-this-spring-jpa-open-in-view-true-property-in-spring-boot
# This should be false in production due to performance reasons
spring.jpa.open-in-view = false

# To autoconfigure the currentSessionContext
# https://stackoverflow.com/questions/25063995/spring-boot-handle-to-hibernate-sessionfactory
#spring.jpa.properties.hibernate.current_session_context_class = org.springframework.orm.hibernate5.SpringSessionContext


# https://www.baeldung.com/spring-boot-change-port
server.port=8081

# The initialization using sql files (schema-postgresql.sql and data-postgresql.sql) does not work in certain computers (?)
# Used to have the creation of DB with Hibernate using the JPA entities plus the usage of schema-postgresql.sql file.
# From https://www.baeldung.com/spring-boot-data-sql-and-schema-sql
spring.jpa.defer-datasource-initialization = true
# To not initialize the schema on startup, because that invalidates the usage of the schema file
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
# To be able to actually use the schema file, since the schema file is disabled for not embedded databases.
# The second property is added because when trying the project in another computer, the schema-postgresql.sql is not added
# From https://stackoverflow.com/questions/38040572/spring-boot-loading-initial-data
spring.sql.init.mode=always
spring.sql.init.platform=postgresql
spring.datasource.initialize = true

# Even with the two previous properties, data-postgresql.sql and schema-postgresql.sql are not loaded. We must include these keys
# From https://stackoverflow.com/questions/62611881/data-sql-with-spring-boot-jpa-postresql-is-not-loading
spring.sql.init.schema-locations=classpath:SQL/schema-postgresql.sql
spring.sql.init.data-locations=classpath:SQL/data-postgresql.sql



# Maximum number of simultaneous connections to the DB
# https://stackoverflow.com/questions/9802684/hibernate-config-connection-pool-size
# hibernate.connection.pool_size = 10

# Common DataSource fields
# Packages scanned to search for Entities (?)
# Apparently not needed since all of our annotated packages are under the main package
# entitymanager.packagesToScan = org.ICIQ.eChempad.entities


################
### Security ###
################

# spring.ldap.* = ...                    # LDAP integration properties
# spring.security.oauth2.* = ...         # OAuth2 and JWT parameters
# spring.session.* = ...                 # Configs for the HTTP session, with optional SQL persistence

# Default user It does not work I do not why
#spring.security.user.name=eChempad
# Default password
#spring.security.user.password=password
# User roles
#spring.security.user.roles = "USER"

# Disable Cross-site request forgery protection
eChempad.security.csrf = false

# Disable Cross-origin resource sharing protection
eChempad.security.cors = false

##############################
### File upload / download ###
##############################
## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./file_db


####################################
### Serialization and Data types ###
####################################
# This property is advice to be set to false if the program has an error when trying to serialize empty beans (?)
# https://stackoverflow.com/questions/15261456/how-do-i-disable-fail-on-empty-beans-in-jackson
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false

# Configure lazy initializations vs eager. In production should be true, but for many reasons it makes no sense to not
# initialize the objects when they are pulled from DB in repository code
# If the following line is present, sql initialization scripts are not called
# spring.main.lazy-initialization=true

#####################
### Views (ZKoss) ###
#####################
# when set will setup a @GetMapping for "/" to return the configured view-name
zk.homepage=zul/main

# Package as jar or war file
#zk.springboot-packaging=jar

# Activate zul resolver, in order to avoid specifying path and / or extension when referring to a zul file
# enable/disable InternalViewResolver for zul files
zk.zul-view-resolver-enabled=true
# Configure any folder below src/main/resources/web using the zk.zul-view-resolver-prefix-property
# prefix prepended to a view name (i.e. a folder inside the web resource package on the classpath)
zk.zul-view-resolver-prefix=
# Automatically add this suffix (.zul) when invoking a zul template --> Not always applies! For example, applies to
# zk.homepage, but not to property URI Template from a ZUL file
zk.zul-view-resolver-suffix=.zul

# filter-mapping string as the basepath for richlets
#zk.richlet-filter-mapping=

# enable/disable websockets (available in ZK-EE)
#zk.websockets-enabled=true
# enable/disable servlet3 CometServerPush (available in ZK-EE)
#zk.servlet3-push-enabled=true
# configure servlet path for ZK's update engine (rarely used)
#zk.update-uri=/zkau
